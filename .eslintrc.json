{
  "env": {
    "browser": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": ["react", "prefer-arrow-functions", "@typescript-eslint"],
  "extends": [
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "standard",
    "prettier",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "rules": {
    // JS
    "no-new": "off",
    "default-case": "off",
    "curly": ["error", "all"],
    "no-case-declarations": "error",
    "arrow-body-style": ["error", "as-needed"],
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": { "multiline": true, "minProperties": 1 },
        "ObjectPattern": { "multiline": true }
      }
    ],

    // Libs
    // eslint-plugin-react
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/self-closing-comp": [
      "error",
      {
        "html": true,
        "component": true
      }
    ],

    // eslint-plugin-prefer-arrow-functions
    "prefer-arrow-functions/prefer-arrow-functions": [
      "error",
      {
        "classPropertiesAllowed": false,
        "disallowPrototype": false,
        "returnStyle": "unchanged",
        "singleReturnOnly": false
      }
    ],

    // TypeScript-specific rules
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-assignment": "error"
  }
}
